FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# agenda

Agenda is a simple API allowing consumers to schedule meeting on-line


## users [/users]
Next 2 apis are irrelevant to key

### Register [POST]
+ Request 
var request = require('request');

request({
  method: 'POST',
  url: 'http://localhost:8080/users',
  headers: {
    'Content-Type': 'application/json'
  },
  body: "{  \"Name\": \"admin\",  \"Password\": \"123456\",  \"Email\": \"2496063488@qq.com\", \"Phone\":\"13709095674\"}"
}, function (error, response, body) {
  console.log('Status:', response.statusCode);
  console.log('Headers:', JSON.stringify(response.headers));
  console.log('Response:', body);
});

+ Response 201 (application/json)

        {
            "Name": "admin",
            "Password": "123456",
            "Email": "2496063488@qq.com",
            "Phone": "13709095674"
        }
        
+ Response 400 ("text/plain")

"Name conflict"

### List All Users [GET]
+ Request 
var request = require('request');

request('http://localhost:8080/users', function (error, response, body) {
  console.log('Status:', response.statusCode);
  console.log('Headers:', JSON.stringify(response.headers));
  console.log('Response:', body);
});

+ Response 200 (application/json)

    {
      "kity": {
       "Name": "kity",
       "Password": "123",
       "Email": "123",
       "Phone": "123"
      },
      "land": {
       "Name": "land",
       "Password": "123",
       "Email": "123",
       "Phone": "123"
      },
      "ricky": {
       "Name": "ricky",
       "Password": "123",
       "Email": "123",
       "Phone": "123"
      }
    }

## user [/user]
User login and logout

### Log in [POST /user/login]
+ Request
var request = require('request');

request({
  method: 'POST',
  url: 'http://localhost:8080/user/login',
  headers: {
    'Content-Type': 'application/json'
  },
  body: "{  \"Name\": \"admin\",  \"Password\": \"123456\"}"
}, function (error, response, body) {
  console.log('Status:', response.statusCode);
  console.log('Headers:', JSON.stringify(response.headers));
  console.log('Response:', body);
});

+ Response 201 (application/json)
{"key":"63259110-7bba-4354-8086-a36724c33e47"}

+ Response 400 ("text/plain")

"Wrong name or wrong password"

+ Response 401 ("text/plain")
"Log out first"


### Log out[DELETE /user/logout/keys/{key}]
+ Response 204 ("text/plain")
"byebye"

+ Response 401 (text/plain)
"Wrong key"

## meetings [/meetings]

### Create Meeting [POST /meetings/keys/{key}]
+ Request
var request = require('request');

request({
  method: 'POST',
  url: 'http://localhost:8080/meetings/keys/63259110-7bba-4354-8086-a36724c33e47',
  headers: {
    'Content-Type': 'application/json'
  },
  body: "{\"Title\":\"m10\",\"Spon\":\"admin\",\"Pr\":[\"kity\", \"frank\"],\"Start\": \"2000-01-02/00:00\",\"End\": \"2018-01-02/00:00\"}"
}, function (error, response, body) {
  console.log('Status:', response.statusCode);
  console.log('Headers:', JSON.stringify(response.headers));
  console.log('Response:', body);
});
+ Response 201 (application/json)
{
  "Title": "m10",
  "Spon": "admin",
  "Pr": [
   "kity",
   "frank"
  ],
  "Start": "2000-01-02/00:00",
  "End": "2018-01-02/00:00"
 }
 
+ Response 401 (text/plain)
"Wrong key"

+ Response 400 ("text/plain")
"Name conflict"

## Query Meeting by Title [GET /meetings/{m-title}/keys/{key}]
+ Request
var request = require('request');

request('http://localhost:8080/meetings/m10/keys/63259110-7bba-4354-8086-a36724c33e47', function (error, response, body) {
  console.log('Status:', response.statusCode);
  console.log('Headers:', JSON.stringify(response.headers));
  console.log('Response:', body);
});

+ Response 200 (application/json)
{
  "Title": "m10",
  "Spon": "admin",
  "Pr": [
   "kity",
   "frank"
  ],
  "Start": "2000-01-02/00:00",
  "End": "2018-01-02/00:00"
 }
 
 + Response 401 (text/plain)
"Wrong key"

+ Response 400 ("text/plain")
"No result"

## Delete Meeting [DELETE /meetings/{m-title}/keys/{key}]
+ Response 204 ("text/plain")
"Succeed"

+ Response 401 (text/plain)
"Wrong key"
